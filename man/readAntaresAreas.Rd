% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readAntares.R
\name{readAntaresAreas}
\alias{readAntaresAreas}
\title{Read output for a list of areas}
\usage{
readAntaresAreas(areas, links = TRUE, clusters = TRUE,
  internalOnly = FALSE, opts = simOptions(), ...)
}
\arguments{
\item{areas}{Vector containing the names of the areas to import. If
\code{NULL} no area is imported. The special value \code{"all"} tells the
function to import all areas. By default, the value is "all" when no other argument is enter and "NULL" when other arguments are enter.}

\item{links}{should links connected to the areas be imported ?}

\item{clusters}{should the clusters of the areas be imported ?}

\item{internalOnly}{if TRUE, only links that connect two areas from the list are returned. 
If not, the function may return links that connect a area from the list with 
a area outside the list.}

\item{opts}{list of simulation parameters returned by the function 
\code{\link{setSimulationPath}}}

\item{...}{Other arguments passed to the function \code{\link{readAntares}}}
}
\value{
If \code{simplify = TRUE} and only one type of output is imported
then the result is a data.table.

Else an object of class "antaresData" is returned. It is a list of
data.tables, each element representing one type of element (areas, links,
clusters)
}
\description{
This a function is a wrapper for "antaresData" that reads all data for a
list of areas.
}
\examples{
\dontrun{
myarea <- simOptions()$areaList[1]
data <- readAntaresAreas(myarea)

# Equivalent but more concise than:
data2 <- readAntares(myarea, links = getLinks(myarea), clusters = myarea)

all.equal(data, data2)
} 
 
}

