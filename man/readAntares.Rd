% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readAntares.R
\name{readAntares}
\alias{readAntares}
\alias{readOutput}
\title{Read the output of an Antares simulation}
\usage{
readAntares(nodes = NULL, links = NULL, clusters = NULL, sets = NULL,
  misc = NULL, thermalAvailabilities = NULL, select = NULL,
  synthesis = getOption("antares")$synthesis,
  mcYears = 1:getOption("antares")$mcYears, timeStep = c("hourly", "daily",
  "weekly", "monthly", "annual"), parallel = FALSE, simplify = TRUE,
  showProgress = TRUE)
}
\arguments{
\item{nodes}{vector containing the names of the nodes to import. If
\code{NULL} no node is imported. The special value \code{"all"} tells the
function to import all nodes.}

\item{links}{vector containing the name of links to import. If \code{NULL} no
node is imported. The special value \code{"all"} tells the function to
import all nodes. Use function \code{\link{getLinks}} to import all links
connected to some nodes.}

\item{clusters}{vector containing the name of the nodes for which you want to
import results at cluster level. If \code{NULL} no cluster is imported. The
special value \code{"all"} tells the function to import clusters from all
nodes.}

\item{sets}{Vector containing the names of the set of nodes to import. If \code{NULL},
no is importer. The special value \code{"all"} tells the function to import all
sets.}

\item{misc}{vector containing the name of the nodes for which you want to
import misc.}

\item{thermalAvailabilities}{Vector of node names for which to import thermal capacity. If \code{NULL},
thermal capacity is not imported.}

\item{select}{character vector containing the name of the columns to import. If this
argument is \code{NULL}, all variables are imported. Special names
\code{"allNodes"} and \code{"allLinks"} indicate to the function to import
all variables for nodes or for links. The list of available variables can
be seen with the command \code{getOption("antares")$variables}.  Id
variables like \code{node}, \code{link} or \code{timeId} are automatically
imported.}

\item{synthesis}{TRUE if you want to import the synthetic results. FALSE if
you prefer to import year by year results.}

\item{mcYears}{Index of the Monte-Carlo years to import. Used only if
synthesis is FALSE.}

\item{timeStep}{Resolution of the data to import: hourly (default), daily,
weekly, monthly or annual.}

\item{parallel}{Should the importation be parallelized ? (See details)}

\item{simplify}{If TRUE and only one type of output is imported then a
data.table is returned. If FALSE, the result will always be a list of class
"antaresOutput".}

\item{showProgress}{If TRUE show the function display information about the progress of the
importation.}
}
\value{
If \code{simplify = TRUE} and only one type of output is imported
then the result is a data.table.

Else an object of class "antaresOutput" is returned. It is a list of
data.tables, each element representing one type of element (nodes, links,
clusters)
}
\description{
This function reads the output of a antares simulation for a set of nodes,
links and/or clusters at a desired resolution (hourly, daily, weekly,
monthly, annual). It can import synthetic results or Monte-Carlo simulations.
}
\details{
If all arguments are unspecified, the default behavior of the
function is to return the synthetized output for all nodes.

If you import several elements of the same type (nodes, links, clusters), you
can use parallelized importation to improve performance. Setting the
parameter \code{parallel = TRUE} is not enough to parallelize the
importation, you also have to install the package
\href{https://cran.r-project.org/web/packages/foreach/index.html}{foreach}
and a package that provides a parallel backend (for instance the package
\href{https://cran.r-project.org/web/packages/doParallel/index.html}{doParallel}).

Before running the function with argument \code{parallel=TRUE}, you need to
register your parallel backend. For instance, if you use package "doParallel"
you need to use the function \code{\link{registerDoParallel}} once per
session.
}
\examples{
if (is.null(getOption("antares"))) setSimulationPath()

# Import nodes and links separately
nodes <- readAntares()
links <- readAntares(links="all")

# Import nodes and links at same time
output <- readAntares(nodes = "all", links = "all")

# Get all output for one node
myNode <- sample(getOption("antares")$nodeList, 1)
myNode

myNodeOutput <- readAntares(node = myNode, links = getLinks(myNode),
                           clusters = myNode)

}

